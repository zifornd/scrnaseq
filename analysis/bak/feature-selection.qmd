---
title: "Feature selection"
params:
    # Integer scalar specifying the number of top HVGs to report
    n: NULL
    # Numeric scalar specifying the proportion of genes to report as HVGs
    prop: NULL
    # Numeric scalar specifying the FDR threshold
    fdr.threshold: NULL
---

```{r, child = c("big-data.Rmd")}
```

Load bioconductor packages:

```{r}
library(scran)
```

Load cran packages:

```{r}
library(ggplot2)
library(patchwork)
```

Read experiment object(s):

```{r}
sce <- readRDS("")
```

## Quantifying per-gene variation

Model the per-gene variance:

```{r}
dec <- bplapply(sce, modelGeneVar, BPPARAM = BPP)
```

Plot the per-gene variance:

```{r}
FUN <- function(data, label) {

    ggplot(data, aes(mean, total)) + 
        geom_point() + 
        ggtitle(label)

}

plt <- bpmapply(FUN, data = dec, label = names(dec), SIMPLIFY = FALSE, BPPARAM = BPP)
```

Save the per-gene variance:

```{r}
FUN <- function(x, y) { metadata(x)$modelGeneVar <- y; x }

sce <- bpmapply(FUN, x = sce, y = dec, BPPARAM = BPP)
```

## Quantifying technical noise

Model the per-gene variance with Poisson noise:

```{r}
dec <- bplapply(sce, modelGeneVarByPoisson, BPPARAM = BPP)
```

Plot the per-gene variance with Poisson noise:

```{r}
FUN <- function(data, label) {

    ggplot(data, aes(mean, total)) + 
        geom_point() + 
        ggtitle(label)

}

plt <- bpmapply(FUN, data = dec, label = names(dec), SIMPLIFY = FALSE, BPPARAM = BPP)
```

Save the per-gene variance with Poisson noise:

```{r}
FUN <- function(x, y) { metadata(x)$modelGeneVarByPoisson <- y; x }

sce <- bpmapply(FUN, x = sce, y = dec, BPPARAM = BPP)
```

## Selecting highly variable genes

Identify HVGs:

```{r}
hvg <- bplapply(
    X = dec,
    FUN = getTopHVGs,
    n = params$n,
    prop = params$prop,
    fdr.threshold = params$fdr.threshold
    BPPARAM = BPP
)
```

Set the row subset:

```{r}
FUN <- function(x, y) { rowSubset(x, "HVG") <- y; x }

sce <- bpmapply(FUN, x = sce, y = hvg, BPPARAM = BPP)
```

Save experiment object(s):

```{r}
saveRDS(sce, file = "feature-selection.rds")
```

Print session information:

```{r}
sessionInfo()
```
